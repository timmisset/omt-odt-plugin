<idea-plugin>
    <id>com.misset.OMT</id>
    <name>OMT / ODT Language</name>
    <vendor email="tim.misset@live.com" url="https://github.com/timmisset/omt">Misset</vendor>

    <description>Plugin for the OPP specific languages OMT and ODT</description>
    <depends>com.intellij.modules.java</depends>
    <depends>com.intellij.modules.lang</depends>
    <extensions defaultExtensionNs="com.intellij">
        <projectConfigurable
                id="com.misset.opp.omt.settings.PluginConfigurable"
                instance="com.misset.opp.settings.PluginConfigurable"
                parentId="language"
                displayName="OMT / ODT Settings"/>

        <!-- YAML extensions -->
        <!--    The YAML language is considered the language of the elements that are parsed by the YAML Parser, this is because the IElementType for the nodes
                has YAML as language and cannot be modified to be OMT for .omt files
                Therefore, certain extensions need to be hooked into the yaml language, not the OMT extension of yaml
                -->
        <completion.contributor implementationClass="com.misset.opp.omt.completion.OMTCompletions"
                                order="first" language="yaml"/>
        <psi.referenceContributor language="yaml"
                                  implementation="com.misset.opp.omt.symbols.OMTReferenceContributor"/>
        <!-- Annotations -->
        <annotator language="yaml" implementationClass="com.misset.opp.omt.annotations.OMTTaggedTypeAnnotator"/>


        <!-- OMT -->
        <fileType name="OMT File" implementationClass="com.misset.opp.omt.OMTFileType" fieldName="INSTANCE"
                  language="OMT" extensions="omt"/>
        <lang.parserDefinition language="OMT" implementationClass="com.misset.opp.omt.OMTParserDefinition"/>
        <postStartupActivity implementation="com.misset.opp.omt.IndexPrefixesStartupActivity"/>
        <postStartupActivity implementation="com.misset.opp.omt.LoadReasonsStartupActivity"/>
        <psi.declarationProvider implementation="com.misset.opp.omt.symbols.OMTDeclarationProvider"/>
        <renamePsiElementProcessor implementation="com.misset.opp.omt.refactor.OMTVariableRenameProcessor"/>
        <renameHandler implementation="com.misset.opp.omt.refactor.OMTVariableRenameHandler"/>
        <referencesSearch implementation="com.misset.opp.omt.findUsage.OMTVariableReferencesSearch"/>
        <referencesSearch implementation="com.misset.opp.omt.findUsage.OMTPrefixReferencesSearch"/>

        <!-- Inspections -->
        <localInspection displayName="UnknownKeyInspection" groupName="OMT" language="OMT"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="com.misset.opp.omt.inspection.OMTUnkownKeysInspection"/>
        <localInspection displayName="OMTUnusedInspection" groupName="OMT" language="OMT"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="com.misset.opp.omt.inspection.OMTUnusedInspection"/>
        <localInspection displayName="OMTUnnecessaryWrappingInspection" groupName="OMT" language="OMT"
                         enabledByDefault="true" level="WARNING"
                         implementationClass="com.misset.opp.omt.inspection.OMTUnnecessaryWrappingInspection"/>
        <localInspection displayName="DuplicateVariableInspection" groupName="OMT" language="OMT"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="com.misset.opp.omt.inspection.OMTDuplicateVariableInspection"/>
        <localInspection displayName="MissingKeyInspection" groupName="OMT" language="OMT"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="com.misset.opp.omt.inspection.OMTMissingKeysInspection"/>
        <localInspection displayName="ValueInspection" groupName="OMT" language="OMT"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="com.misset.opp.omt.inspection.OMTValueInspection"/>


        <!-- ODT -->
        <fileType name="ODT File" implementationClass="com.misset.opp.odt.ODTFileType" fieldName="INSTANCE"
                  language="ODT" extensions="odt"/>
        <multiHostInjector implementation="com.misset.opp.odt.ODTMultiHostInjector"/>
        <lang.parserDefinition language="ODT"
                               implementationClass="com.misset.opp.odt.ODTParserDefinition"/>
        <lang.findUsagesProvider language="ODT" implementationClass="com.misset.opp.odt.ODTFindUsagesProvider"/>
        <lang.syntaxHighlighter language="ODT" implementationClass="com.misset.opp.odt.syntax.ODTSyntaxHighlighter"/>
        <colorSettingsPage implementation="com.misset.opp.odt.syntax.ODTColorSettingsPage"/>
        <postStartupActivity implementation="com.misset.opp.callable.builtin.LoadDocumentationStartupActivity"/>
        <lang.formatter language="ODT" implementationClass="com.misset.opp.odt.formatter.ODTFormattingModelBuilder"/>
        <!-- Completions -->
        <completion.contributor language="ODT"
                                implementationClass="com.misset.opp.odt.completion.ODTTraverseCompletion"/>

        <!-- Annotations -->
        <annotator implementationClass="com.misset.opp.odt.annotation.ODTHighlightingAnnotator" language="ODT"/>
        <annotator language="ODT" implementationClass="com.misset.opp.odt.annotation.ODTResolvableAnnotator"/>
        <annotator language="ODT" implementationClass="com.misset.opp.odt.annotation.CodeAnnotatorUnresolvable"/>
        <annotator language="ODT" implementationClass="com.misset.opp.odt.annotation.ODTSemicolonAnnotator"/>

        <lang.documentationProvider language="ODT"
                                    implementationClass="com.misset.opp.odt.documentation.ODTDocumentationProvider"/>

        <!-- Inspections -->
        <localInspection displayName="Unused" groupName="Redundancy" language="ODT"
                         enabledByDefault="true" level="WARNING" hasStaticDescription="true"
                         implementationClass="com.misset.opp.odt.inspection.ODTUnusedInspection"/>
        <localInspection displayName="Ontology" groupName="RDF / TTL" language="ODT"
                         enabledByDefault="true" level="WARNING" hasStaticDescription="true"
                         implementationClass="com.misset.opp.odt.inspection.ODTResolvableInspection"/>
        <localInspection displayName="Unreachable code" groupName="Redundancy" language="ODT"
                         enabledByDefault="true" level="WARNING" hasStaticDescription="true"
                         implementationClass="com.misset.opp.odt.inspection.redundancy.ODTCodeInspectionUnreachable"/>
        <localInspection displayName="Unnecessary wrapping" groupName="Redundancy" language="ODT"
                         enabledByDefault="true" level="WARNING" hasStaticDescription="true"
                         implementationClass="com.misset.opp.odt.inspection.ODTStyleInspectionUnnecessaryWrappingSubquery"/>
        <!-- Types -->
        <localInspection displayName="Boolean value" groupName="Type validation" language="ODT"
                         enabledByDefault="true" level="ERROR" hasStaticDescription="true"
                         implementationClass="com.misset.opp.odt.inspection.type.ODTCodeInspectionBoolean"/>
        <localInspection displayName="Collections and Assignments" groupName="Type validation" language="ODT"
                         enabledByDefault="true" level="WARNING" hasStaticDescription="true"
                         implementationClass="com.misset.opp.odt.inspection.type.ODTCodeInspectionCollectionStatement"/>

        <!-- Redudancy -->
        <localInspection displayName="Duplicated DEFINE statements" groupName="Redundancy" language="ODT"
                         enabledByDefault="true" level="WARNING" hasStaticDescription="true"
                         implementationClass="com.misset.opp.odt.inspection.ODTCodeInspectionDefinedDuplication"/>

        <localInspection displayName="Unnecessary Identifier operator" groupName="Redundancy" language="ODT"
                         enabledByDefault="true" level="WARNING" hasStaticDescription="true"
                         implementationClass="com.misset.opp.odt.inspection.redundancy.ODTStyleInspectionUnnecessaryIdentifierOperator"/>

        <!-- Calls -->
        <localInspection shortName="Calls" hasStaticDescription="true"
                         language="ODT" displayName="Inspect all ODT based calls" groupPath="ODT"
                         groupName="Builtin" enabledByDefault="true"
                         implementationClass="com.misset.opp.odt.inspection.calls.ODTCallInspection"/>

        <!-- Calls / Builtin command inspections -->
        <localInspection shortName="BuiltinForEach" hasStaticDescription="true"
                         language="ODT" displayName="Inspect builtin command: FOREACH" groupPath="ODT"
                         groupName="Builtin" enabledByDefault="true"
                         implementationClass="com.misset.opp.odt.inspection.calls.commands.ODTCommandInspectionForEach"/>
        <localInspection shortName="BuiltinLoadOntology" hasStaticDescription="true"
                         language="ODT" displayName="Inspect builtin command: LOAD_ONTOLOGY" groupPath="ODT"
                         groupName="Builtin" enabledByDefault="true"
                         implementationClass="com.misset.opp.odt.inspection.calls.commands.ODTCommandInspectionLoadOntology"/>

        <!-- Calls / Builtin operator inspections -->
        <localInspection shortName="BuiltinChoose" hasStaticDescription="true"
                         language="ODT" displayName="Inspect builtin operator: CHOOSE" groupPath="ODT"
                         groupName="Builtin" enabledByDefault="true"
                         implementationClass="com.misset.opp.odt.inspection.calls.operators.ODTOperatorInspectionChoose"/>
        <localInspection shortName="BuiltinIIf" hasStaticDescription="true"
                         language="ODT" displayName="Inspect builtin operator: IIF" groupPath="ODT"
                         groupName="Builtin" enabledByDefault="true"
                         implementationClass="com.misset.opp.odt.inspection.calls.operators.ODTOperatorInspectionIIf"/>

        <!-- TTL -->
        <postStartupActivity implementation="com.misset.opp.ttl.LoadOntologyStartupActivity"/>
        <notificationGroup id="Update Ontology" displayType="BALLOON"/>

        <!-- JAVA -->
        <psi.referenceContributor language="JAVA"
                                  implementation="com.misset.opp.odt.psi.reference.ODTJavaDocReferenceContributor"/>

        <lang.elementManipulator forClass="org.jetbrains.yaml.psi.impl.YAMLScalarImpl" order="first"
                                 implementationClass="com.misset.opp.omt.OMTScalarElementManipulator"/>


    </extensions>
    <depends>com.intellij.java</depends>

    <!-- please see https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html
         on how to target different products -->
    <depends>org.jetbrains.plugins.yaml</depends>

    <depends>com.intellij.modules.platform</depends>

    <actions>
        <!-- Add your actions here -->
    </actions>
</idea-plugin>

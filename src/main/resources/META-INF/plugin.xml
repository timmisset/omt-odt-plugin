<idea-plugin>
    <id>com.misset.OMT</id>
    <name>OMT / ODT Language</name>
    <vendor email="tim.misset@live.com" url="https://github.com/timmisset/omt">Misset</vendor>

    <description>Plugin for the OPP specific languages OMT and ODT</description>
    <depends>com.intellij.modules.java</depends>
    <depends>com.intellij.modules.lang</depends>
    <extensions defaultExtensionNs="com.intellij">
        <projectConfigurable
                id="com.misset.opp.omt.settings.PluginConfigurable"
                instance="com.misset.opp.settings.PluginConfigurable"
                parentId="language"
                displayName="OMT / ODT Settings"/>

        <!-- YAML extensions -->
        <!--    The YAML language is considered the language of the elements that are parsed by the YAML Parser, this is because the IElementType for the nodes
                has YAML as language and cannot be modified to be OMT for .omt files
                Therefore, certain extensions need to be hooked into the yaml language, not the OMT extension of yaml
                -->
        <completion.contributor implementationClass="com.misset.opp.omt.completion.OMTCompletions"
                                order="first" language="yaml"/>
        <!-- Annotations -->
        <annotator language="yaml" implementationClass="com.misset.opp.omt.annotations.OMTTaggedTypeAnnotator"/>


        <!-- OMT -->
        <fileType name="OMT File" implementationClass="com.misset.opp.omt.OMTFileType" fieldName="INSTANCE"
                  language="OMT" extensions="omt"/>
        <lang.parserDefinition language="OMT" implementationClass="com.misset.opp.omt.OMTParserDefinition"/>
        <lang.parserDefinition language="yaml" order="first"
                               implementationClass="com.misset.opp.omt.YAMLOMTParserDefinition"/>
        <lang.findUsagesProvider language="yaml" order="before yamlFindUsagesProvider"
                                 implementationClass="com.misset.opp.omt.OMTFindUsageProvider"/>
        <psi.referenceContributor language="yaml" implementation="com.misset.opp.omt.OMTYamlReferenceContributor"/>
        <postStartupActivity id="prefixes" implementation="com.misset.opp.omt.startup.IndexPrefixesStartupActivity"/>
        <postStartupActivity id="reasons" implementation="com.misset.opp.omt.startup.LoadReasonsStartupActivity"/>
        <postStartupActivity id="importedMembers"
                             implementation="com.misset.opp.omt.startup.ImportedMembersStartupActivity"/>
        <!-- Inspections -->
        <!-- Unused-->
        <localInspection displayName="OMTUnusedModelItemInspection" groupPath="OMT" language="OMT"
                         enabledByDefault="true" level="WARNING" groupName="Unused"
                         implementationClass="com.misset.opp.omt.inspection.unused.OMTUnusedModelItemInspection"/>
        <localInspection displayName="OMTUnusedVariableInspection" groupPath="OMT" language="OMT"
                         enabledByDefault="true" level="WARNING" groupName="Unused"
                         implementationClass="com.misset.opp.omt.inspection.unused.OMTUnusedVariableInspection"/>
        <localInspection displayName="OMTUnusedPrefixIriInspection" groupPath="OMT" language="OMT"
                         enabledByDefault="true" level="WARNING" groupName="Unused"
                         implementationClass="com.misset.opp.omt.inspection.unused.OMTUnusedPrefixIriInspection"/>
        <localInspection displayName="OMTUnusedImportMemberInspection" groupPath="OMT" language="OMT"
                         enabledByDefault="true" level="WARNING" groupName="Unused"
                         implementationClass="com.misset.opp.omt.inspection.unused.OMTUnusedImportMemberInspection"/>

        <!-- Structure -->
        <localInspection displayName="UnknownKeysInspection" groupPath="OMT" language="OMT"
                         enabledByDefault="true" level="ERROR" groupName="Structure"
                         implementationClass="com.misset.opp.omt.inspection.structure.OMTUnkownKeysInspection"/>
        <localInspection displayName="MissingKeysInspection" groupPath="OMT" language="OMT"
                         enabledByDefault="true" level="ERROR" groupName="Structure"
                         implementationClass="com.misset.opp.omt.inspection.structure.OMTMissingKeysInspection"/>
        <localInspection displayName="ValueInspection" groupPath="OMT" language="OMT"
                         enabledByDefault="true" level="ERROR" groupName="Structure"
                         implementationClass="com.misset.opp.omt.inspection.structure.OMTValueInspection"/>

        <!-- Style -->
        <localInspection displayName="OMTUnnecessaryWrappingInspection" groupPath="OMT" language="OMT"
                         enabledByDefault="true" level="WARNING" groupName="Style"
                         implementationClass="com.misset.opp.omt.inspection.OMTUnnecessaryWrappingInspection"/>

        <!-- Redundancy -->
        <localInspection displayName="DuplicateVariableInspection" groupName="Redundancy" language="OMT"
                         enabledByDefault="true" level="WARNING" groupPath="OMT"
                         implementationClass="com.misset.opp.omt.inspection.redundancy.OMTDuplicateVariableInspection"/>
        <localInspection displayName="OMTDuplicateImportInspection" groupName="Redundancy" language="OMT"
                         enabledByDefault="true" level="WARNING" groupPath="OMT"
                         implementationClass="com.misset.opp.omt.inspection.redundancy.OMTDuplicateImportInspection"/>


        <!-- ODT -->
        <fileType name="ODT File" implementationClass="com.misset.opp.odt.ODTFileType" fieldName="INSTANCE"
                  language="ODT" extensions="odt"/>
        <multiHostInjector implementation="com.misset.opp.odt.ODTMultiHostInjector"/>
        <lang.parserDefinition language="ODT"
                               implementationClass="com.misset.opp.odt.ODTParserDefinition"/>
        <lang.findUsagesProvider language="ODT" implementationClass="com.misset.opp.odt.ODTFindUsagesProvider"/>
        <lang.syntaxHighlighter language="ODT" implementationClass="com.misset.opp.odt.syntax.ODTSyntaxHighlighter"/>
        <colorSettingsPage implementation="com.misset.opp.odt.syntax.ODTColorSettingsPage"/>
        <postStartupActivity implementation="com.misset.opp.callable.builtin.LoadDocumentationStartupActivity"/>
        <lang.formatter language="ODT" implementationClass="com.misset.opp.odt.formatter.ODTFormattingModelBuilder"/>
        <codeInsight.unresolvedReferenceQuickFixProvider
                implementation="com.misset.opp.odt.ODTUnresolvedReferenceQuickFixProvider"/>
        <enterHandlerDelegate implementation="com.misset.opp.odt.formatter.ODTEnterHandlerDelegateAdapter"/>
        <lang.braceMatcher language="ODT" implementationClass="com.misset.opp.odt.formatter.ODTPairedBraceMatcher"/>

        <!-- Completions -->
        <completion.contributor language="ODT"
                                implementationClass="com.misset.opp.odt.completion.ODTTraverseCompletion"/>
        <completion.contributor language="ODT"
                                implementationClass="com.misset.opp.odt.completion.ODTOperatorCompletion"/>
        <completion.contributor language="ODT"
                                implementationClass="com.misset.opp.odt.completion.ODTVariableCompletion"/>
        <!-- Annotations -->
        <annotator implementationClass="com.misset.opp.odt.annotation.ODTHighlightingAnnotator" language="ODT"/>
        <annotator language="ODT" implementationClass="com.misset.opp.odt.annotation.ODTResolvableAnnotator"/>
        <annotator language="ODT" implementationClass="com.misset.opp.odt.annotation.CodeAnnotatorUnresolvable"/>
        <annotator language="ODT" implementationClass="com.misset.opp.odt.annotation.ODTSemicolonAnnotator"/>
        <annotator language="ODT" implementationClass="com.misset.opp.odt.annotation.ODTDocumentationAnnotator"/>

        <!-- Inspections -->
        <!-- Redudancy -->
        <localInspection displayName="Duplicated DEFINE statements" groupName="Redundancy" language="ODT"
                         enabledByDefault="true" level="WARNING" hasStaticDescription="true" groupPath="ODT"
                         implementationClass="com.misset.opp.odt.inspection.ODTCodeInspectionDefinedDuplication"/>

        <localInspection displayName="Unnecessary Identifier operator" groupName="Redundancy" language="ODT"
                         enabledByDefault="true" level="WARNING" hasStaticDescription="true" groupPath="ODT"
                         implementationClass="com.misset.opp.odt.inspection.redundancy.ODTStyleInspectionUnnecessaryIdentifierOperator"/>
        <localInspection displayName="Unused" groupName="Redundancy" language="ODT" groupPath="ODT"
                         enabledByDefault="true" level="WARNING" hasStaticDescription="true"
                         implementationClass="com.misset.opp.odt.inspection.ODTUnusedInspection"/>
        <localInspection displayName="Ontology" groupName="RDF / TTL" language="ODT" groupPath="ODT"
                         enabledByDefault="true" level="WARNING" hasStaticDescription="true"
                         implementationClass="com.misset.opp.odt.inspection.ODTResolvableInspection"/>
        <localInspection displayName="Unreachable code" groupName="Redundancy" language="ODT"
                         enabledByDefault="true" level="WARNING" hasStaticDescription="true" groupPath="ODT"
                         implementationClass="com.misset.opp.odt.inspection.redundancy.ODTCodeInspectionUnreachable"/>
        <localInspection displayName="Unnecessary wrapping" groupName="Redundancy" language="ODT"
                         enabledByDefault="true" level="WARNING" hasStaticDescription="true" groupPath="ODT"
                         implementationClass="com.misset.opp.odt.inspection.ODTStyleInspectionUnnecessaryWrappingSubquery"/>
        <!-- Types -->
        <localInspection displayName="Boolean value" groupName="Types" language="ODT"
                         enabledByDefault="true" level="ERROR" hasStaticDescription="true" groupPath="ODT"
                         implementationClass="com.misset.opp.odt.inspection.type.ODTCodeInspectionBoolean"/>
        <localInspection displayName="Collections and Assignments" groupName="Types" language="ODT"
                         enabledByDefault="true" level="WARNING" hasStaticDescription="true" groupPath="ODT"
                         implementationClass="com.misset.opp.odt.inspection.type.ODTCodeInspectionCollectionStatement"/>
        <localInspection displayName="Untyped warning" groupName="Types" language="ODT"
                         enabledByDefault="true" level="WARNING" hasStaticDescription="true" groupPath="ODT"
                         implementationClass="com.misset.opp.odt.inspection.type.ODTCodeUntypedInspectionWarning"/>

        <!-- Calls -->
        <localInspection shortName="BuiltinCommands" hasStaticDescription="true"
                         language="ODT" displayName="Inspect all calls to ODT Builtin Commands" groupPath="ODT"
                         groupName="Calls" enabledByDefault="true"
                         implementationClass="com.misset.opp.odt.inspection.calls.ODTBuiltinCommandCallInspection"/>
        <localInspection shortName="BuiltinOperators" hasStaticDescription="true"
                         language="ODT" displayName="Inspect all calls to ODT Builtin Operators" groupPath="ODT"
                         groupName="Calls" enabledByDefault="true"
                         implementationClass="com.misset.opp.odt.inspection.calls.ODTBuiltinOperatorCallInspection"/>
        <localInspection shortName="DefinedCommands" hasStaticDescription="true"
                         language="ODT" displayName="Inspect all calls to ODT Defined Commands" groupPath="ODT"
                         groupName="Calls" enabledByDefault="true"
                         implementationClass="com.misset.opp.odt.inspection.calls.ODTDefinedCommandCallInspection"/>
        <localInspection shortName="DefinedQueries" hasStaticDescription="true"
                         language="ODT" displayName="Inspect all calls to ODT Defined Queries" groupPath="ODT"
                         groupName="Calls" enabledByDefault="true"
                         implementationClass="com.misset.opp.odt.inspection.calls.ODTDefinedOperatorCallInspection"/>
        <localInspection shortName="OMTCallables" hasStaticDescription="true"
                         language="ODT" displayName="Inspect all calls to OMT Callables" groupPath="ODT"
                         groupName="Calls" enabledByDefault="true"
                         implementationClass="com.misset.opp.odt.inspection.calls.ODTOMTCallInspection"/>

        <!-- Calls / Builtin command inspections -->
        <localInspection shortName="BuiltinForEach" hasStaticDescription="true"
                         language="ODT" displayName="Inspect builtin command: FOREACH" groupPath="ODT"
                         groupName="Builtin" enabledByDefault="true"
                         implementationClass="com.misset.opp.odt.inspection.calls.commands.ODTCommandInspectionForEach"/>
        <localInspection shortName="BuiltinLoadOntology" hasStaticDescription="true"
                         language="ODT" displayName="Inspect builtin command: LOAD_ONTOLOGY" groupPath="ODT"
                         groupName="Builtin" enabledByDefault="true"
                         implementationClass="com.misset.opp.odt.inspection.calls.commands.ODTCommandInspectionLoadOntology"/>

        <!-- Calls / Builtin operator inspections -->
        <localInspection shortName="BuiltinChoose" hasStaticDescription="true"
                         language="ODT" displayName="Inspect builtin operator: CHOOSE" groupPath="ODT"
                         groupName="Builtin" enabledByDefault="true"
                         implementationClass="com.misset.opp.odt.inspection.calls.operators.ODTOperatorInspectionChoose"/>
        <localInspection shortName="BuiltinIIf" hasStaticDescription="true"
                         language="ODT" displayName="Inspect builtin operator: IIF" groupPath="ODT"
                         groupName="Builtin" enabledByDefault="true"
                         implementationClass="com.misset.opp.odt.inspection.calls.operators.ODTOperatorInspectionIIf"/>

        <!-- TTL -->
        <postStartupActivity implementation="com.misset.opp.ttl.LoadOntologyStartupActivity"/>
        <notificationGroup id="Update Ontology" displayType="BALLOON"/>

        <!-- JAVA -->
        <psi.referenceContributor language="JAVA"
                                  implementation="com.misset.opp.odt.psi.reference.ODTJavaDocReferenceContributor"/>

        <lang.elementManipulator forClass="org.jetbrains.yaml.psi.impl.YAMLScalarImpl" order="first"
                                 implementationClass="com.misset.opp.omt.OMTScalarElementManipulator"/>


    </extensions>
    <depends>com.intellij.java</depends>

    <!-- please see https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html
         on how to target different products -->
    <depends>org.jetbrains.plugins.yaml</depends>

    <depends>com.intellij.modules.platform</depends>

    <actions>
        <!-- Add your actions here -->
    </actions>
</idea-plugin>

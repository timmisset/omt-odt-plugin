plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.3.0'
    id 'jacoco'
}

intellij {
    version = '2021.3'
    type = 'IU'
    plugins = [
            'java',
            'JavaScriptLanguage',
            'AngularJS',
            'org.jetbrains.plugins.yaml'
    ]
}

group 'com.misset'
version '5.2'

sourceCompatibility = 11
sourceSets.main.java.srcDirs 'src/main/gen'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '3.4.6'
    implementation group: 'com.atlassian.commonmark', name: 'commonmark', version: '0.2.0'
    implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'
    implementation group: 'org.apache.jena', name: 'jena', version: '3.17.0', ext: 'pom' exclude group: 'org.slf4j'
    implementation group: 'org.apache.jena', name: 'jena-core', version: '3.17.0' exclude group: 'org.slf4j'
}
test {
    useJUnitPlatform {

    }
    systemProperty "idea.home.path", "C:/Program Files/JetBrains/IntelliJ IDEA 2021.3"
}
jacocoTestReport {
    // due to the unpredictability of the IntelliJ Platform, unit tests should not be considered part of the coverage
    // only the fixture tests should be used as advised by the JetBrains
    dependsOn test // tests are required to run before generating the report

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: '**/gen/**')
        }))
    }
}
buildSearchableOptions.enabled = false
// See https://github.com/JetBrains/gradle-intellij-plugin/

patchPluginXml {
    sinceBuild = '212'

    changeNotes = """
        <h1>Update 5.2</h1>
        <p>The Information annotations for most of the ODT language have been replaced with an implementation
        of the IntelliJ DocumentationProvider. There is now more detailed information available, make sure to enable the
        QuickDocumentation at File | Settings | Editor | Code Editing.</p>
        <br>
        Fixed #12: <https://github.com/timmisset/omt-odt-plugin/issues/12>Invalid element</a><br>
        Fixed #13: <https://github.com/timmisset/omt-odt-plugin/issues/13>Class cast exception for non-OMT yaml file</a><br>
        
        
        
        
        <h1>Update 5.1.2</h1>
        Enhancement #7: <a href="https://github.com/timmisset/omt-odt-plugin/issues/7">Resolve subquery</a><br>
        Fixed #8: <a href="https://github.com/timmisset/omt-odt-plugin/issues/8">Export member not counted as usage for import member in module</a><br>
        Fixed #9: <a href="https://github.com/timmisset/omt-odt-plugin/issues/9">Null dependency in query</a><br>
        Fixed #10: <a href="https://github.com/timmisset/omt-odt-plugin/issues/10">ODT Call doesn't reset fragment cache</a><br>
        Enhancement #11: <a href="https://github.com/timmisset/omt-odt-plugin/issues/11">Resolve Procedure onRun</a><br>

        <h1>Update 5.1.1</h1>
        Major performance improvements</br>
        Fixed #1: <a href="https://github.com/timmisset/omt-odt-plugin/issues/1">Suspicious assignment: maxCount == 1</a><br>
        Fixed #2: <a href="https://github.com/timmisset/omt-odt-plugin/issues/2">PayloadItem: query reference</a><br>
        Fixed #4: <a href="https://github.com/timmisset/omt-odt-plugin/issues/4">annotate with base for root curies</a><br>
        Fixed #5: <a href="https://github.com/timmisset/omt-odt-plugin/issues/5">Component doesn't provide callables</a><br>
        Fixed #6: <a href="https://github.com/timmisset/omt-odt-plugin/issues/6">Binding destructed notation</a><br>
      """
}
tasks {
    runIde {
        jvmArgs("-Xmx2000m")
    }
    runPluginVerifier {
        ideVersions = ["IC-2021.1", "IC-2021.2"]
    }


}
publishPlugin {
    token = System.getenv().getOrDefault("ORG_GRADLE_PROJECT_intellijPublishToken", "")
}

plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '1.3.0'
    id 'jacoco'
}

intellij {
    version = '2021.3'
    type = 'IU'
    plugins = [
            'java',
            'JavaScriptLanguage',
            'AngularJS',
            'org.jetbrains.plugins.yaml'
    ]
}

group 'com.misset'
version '5.3'

sourceCompatibility = 11
sourceSets.main.java.srcDirs 'src/main/gen'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: '3.4.6'
    implementation group: 'com.atlassian.commonmark', name: 'commonmark', version: '0.2.0'
    implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'
    implementation group: 'org.apache.jena', name: 'jena', version: '3.17.0', ext: 'pom' exclude group: 'org.slf4j'
    implementation group: 'org.apache.jena', name: 'jena-core', version: '3.17.0' exclude group: 'org.slf4j'
}
test {
    useJUnitPlatform {

    }
    systemProperty "idea.home.path", "C:/Program Files/JetBrains/IntelliJ IDEA 2021.3"
}
jacocoTestReport {
    // due to the unpredictability of the IntelliJ Platform, unit tests should not be considered part of the coverage
    // only the fixture tests should be used as advised by the JetBrains
    dependsOn test // tests are required to run before generating the report

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: '**/gen/**')
        }))
    }
}
buildSearchableOptions.enabled = false
// See https://github.com/JetBrains/gradle-intellij-plugin/

patchPluginXml {
    sinceBuild = '212'

    changeNotes = """
        <h1>Update 5.3</h1>
        <p>
        Added: <u>ignored return value inspection</u>. 
        Sets a weak warning when a statement resolves to a value which is not used or assigned to a variable<br>
        </p>       
        <h1>Update 5.2.2</h1>
        Fixed #17: <https://github.com/timmisset/omt-odt-plugin/issues/17>getHostDocument ClassCastException</a><br>
        Improved filter, when owl:Thing (unspecified) type enters a type filter, the outcome resolves to the checked type<br>
        Issue with recursion in super/subclass lookups fixed, this caused the IDE to hang after a while. Might fix the issue
        alltogether or it might be part of the solution. Please report such behavior on the github issues page.<br>
        
        <h1>Update 5.2.1</h1>
        Fixed #14: <a href="https://github.com/timmisset/omt-odt-plugin/issues/14">Model in module structure</a><br>
        Fixed #15: <a href="https://github.com/timmisset/omt-odt-plugin/issues/15">Id for action is not required</a><br>
        Fixed #16: <a href="https://github.com/timmisset/omt-odt-plugin/issues/16">Recursion in documentation provider</a><br>
        
        <h1>Update 5.2</h1>
        <p>The Information annotations for most of the ODT language have been replaced with an implementation
        of the IntelliJ DocumentationProvider. There is now more detailed information available, make sure to enable the
        QuickDocumentation at File | Settings | Editor | Code Editing.</p>
        <p>Added usage inspection for variable assignments, throws warning when an assigned value is never used. Also a warning
        when a variable is used before it's assigned.</p>
        <p>Automatically resets the model when one of the watched TTL files is modified</p>
        <br>
        Fixed #12: <a href="https://github.com/timmisset/omt-odt-plugin/issues/12">Invalid element</a><br>
        Fixed #13: <a href="https://github.com/timmisset/omt-odt-plugin/issues/13">Class cast exception for non-OMT yaml file</a><br>
      """
}
tasks {
    runIde {
        jvmArgs("-Xmx2000m")
    }
    runPluginVerifier {
        ideVersions = ["IC-2021.1", "IC-2021.2"]
    }


}
publishPlugin {
    token = System.getenv().getOrDefault("ORG_GRADLE_PROJECT_intellijPublishToken", "")
}
